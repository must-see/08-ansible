---
- name: Install Clickhouse
  hosts: clickhouse
  handlers:
    - name: Start clickhouse service
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted       
  tasks:
    - block:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.noarch.rpm"
            dest: "./{{ item }}-{{ clickhouse_version }}.rpm"
          with_items: "{{ clickhouse_packages }}"
      rescue:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm"
            dest: "./clickhouse-common-static-{{ clickhouse_version }}.rpm"
    - name: Install clickhouse packages
      become: true
      ansible.builtin.yum:
        name:
          - clickhouse-common-static-{{ clickhouse_version }}.rpm
          - clickhouse-client-{{ clickhouse_version }}.rpm
          - clickhouse-server-{{ clickhouse_version }}.rpm
      notify: Start clickhouse service    
    - name: Enable remote connections to clickhouse server
      become: true
      ansible.builtin.lineinfile:
        path: /etc/clickhouse-server/config.xml
        regexp: <!-- * <listen_host>::1</listen_host> * -->
        line: <listen_host>0.0.0.0</listen_host>
    
    - name: UP clickhouse-server
      ansible.builtin.command: "clickhouse-server --daemon"
    
    - name: Flush handlers
      meta: flush_handlers    
    
    - name: Create database
      ansible.builtin.command: "clickhouse-client -q 'create database logs2;'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc !=82
      changed_when: create_db.rc == 0

    - name: Create log table
      tags: clickhouse_db
      ansible.builtin.command:
        argv:
          - clickhouse-client
          - --database
          - "{{ clickhouse_database_name }}"
          - -q 
          - |
            {{ clickhouse_create_table }}
      register: create_table
      failed_when: create_table.rc != 0 and create_table.rc !=57 # table already exists
      changed_when: create_table.rc == 0
    

- name: Install Vector
  tags: vector
  hosts: vector
  handlers:
    - name: Start Vector service
      become: true
      ansible.builtin.systemd:
        name: vector
        state: restarted
  tasks:
    - name: Add clickhouse addresses to /etc/hosts
      become: true
      lineinfile:
        dest: /etc/hosts
        regexp: '.*{{ item }}$'
        line: "{{ hostvars[item].ansible_host }} {{ item }}"
        state: present
      when: hostvars[item].ansible_host is defined
      with_items: "{{ groups.clickhouse }}"
    - block:
        - name: Get vector distrib
          ansible.builtin.get_url:
            url: "https://packages.timber.io/vector/latest/vector_{{ vector_version }}_amd64.deb"
            dest: "./vector_{{ vector_version }}_amd64.deb"
        - name: Install vector package
          become: true
          ansible.builtin.apt:            
            deb: ./vector_{{ vector_version }}_amd64.deb
                      
        - name: Redefine vector config name
          tags: vector_config
          become: true
          ansible.builtin.lineinfile:
            path: /etc/default/vector
            regexp: 'VECTOR_CONFIG='
            line: VECTOR_CONFIG=/etc/vector/config.yaml
        - name: Create vector config
          tags: vector_config
          become: true
          ansible.builtin.copy:
            dest: /etc/vector/config.yaml
            content: |
              {{ vector_config | to_nice_yaml(indent=2) }}
      notify: Start Vector service